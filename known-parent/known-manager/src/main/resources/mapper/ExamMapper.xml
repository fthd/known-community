<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.known.manager.mapper.ExamMapper" >
  <resultMap id="result_map_exam" type="com.known.common.model.Exam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="exam_title" property="examTitle" jdbcType="VARCHAR" />
    <result column="analyse" property="analyse" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="choose_type" property="chooseType" jdbcType="INTEGER" typeHandler="com.known.manager.handler.ChooseTypeHandler"/>
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_icon" property="userIcon" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" typeHandler="com.known.manager.handler.StatusHandler"/>
    <collection column="id" property="examDetails" select="com.known.manager.mapper.ExamDetailMapper.selectList"></collection>
  </resultMap>
  
    <resultMap id="result_map_exam_right_answer" type="com.known.common.model.Exam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="exam_title" property="examTitle" jdbcType="VARCHAR" />
    <result column="analyse" property="analyse" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="choose_type" property="chooseType" jdbcType="INTEGER" typeHandler="com.known.manager.handler.ChooseTypeHandler"/>
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_icon" property="userIcon" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" typeHandler="com.known.manager.handler.StatusHandler"/>
    <collection column="id" property="examDetails" select="com.known.manager.mapper.ExamDetailMapper.selectListWithRightAnswer"></collection>
  </resultMap>

<sql id="Base_Condition" >
    <where >
    	<if test="null != examId">
    		and id = #{examId}
    	</if>
    	<if test="null != status">
    		and status = #{status.type}
    	</if>
    	<if test="null!= categoryId">
     		and category_id = #{categoryId}
     	</if>
     	<if test="null != examIds">
    		and id in (<foreach collection="examIds" separator="," item="examId"> #{examId}</foreach>)
    	</if>
    	<if test="null!= startDate and ''!= startDate">
     		<![CDATA[ 
     				and create_time >= STR_TO_DATE('${startDate} 00:00:00','%Y-%m-%d %H:%i:%s')
     				]]>
     	</if>
     	 <if test="null!= endDate and ''!= endDate">
     		<![CDATA[ 
     				and create_time <= STR_TO_DATE('${endDate} 23:59:59', '%Y-%m-%d %H:%i:%s')		
     				]]>
     	</if>
    </where>
  </sql>  
  
  <sql id="Base_Column_List" >
    id, category_id, exam_title,
    	<if test="showAnalyse">
    		analyse,
    	</if>
     choose_type, user_id, user_icon, user_name, create_time, status
  </sql>
  
	<select id="selectExamRand" resultMap="result_map_exam">
		select <include refid="Base_Column_List"/> from known_exam <include refid="Base_Condition"/>
		order by rand() limit #{examMaxTitle}
	</select>
	
	<select id="selectList" resultMap="result_map_exam">
		select <include refid="Base_Column_List"/> from known_exam <include refid="Base_Condition"/>
		<if test="page != null">
			limit #{page.start},#{page.end}
		</if>
	</select>
	
	<select id="selectListWithRightAnswer" resultMap="result_map_exam_right_answer">
		select <include refid="Base_Column_List"/> from known_exam <include refid="Base_Condition"/>
		<if test="page != null">
			limit #{page.start},#{page.end}
		</if>
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer">
		select count(1) from known_exam <include refid="Base_Condition"/>
	</select>
	
	<select id="selectExamUsers" resultMap="result_map_exam">
		select count(1) examCount, max(user_name) user_name, max(user_icon) user_icon, user_id
		from known_exam <include refid="Base_Condition"/> group by user_id order by examCount desc
		<if test="page != null">
			 limit #{page.start},#{page.end}
		</if>
	</select>
	
		<select id="selectExamUsersCount" resultType="java.lang.Integer">
		select count(distinct(user_id)) from known_exam <include refid="Base_Condition"/>
	</select>
	
	
  <delete id="delete" >
    delete from known_exam
    where id = #{id}
  </delete>
  
<update id="updateExamStatus">
	update known_exam set status = #{status.type} where 
	id in (<foreach collection="ids" separator="," item="id"> #{id}</foreach>)
</update>

  <insert id="insert" parameterType="com.known.common.model.Exam" >
  		<selectKey keyProperty="id" resultType="int" order="AFTER">
  				SELECT LAST_INSERT_ID()
  		</selectKey>
    insert into known_exam (category_id, choose_type, 
      user_id, user_icon, user_name, 
      create_time, status, exam_title, 
      analyse)
    values (#{categoryId,jdbcType=INTEGER}, #{chooseType,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{userIcon,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{examTitle,jdbcType=LONGVARCHAR}, 
      #{analyse,jdbcType=LONGVARCHAR})
  </insert>
  
</mapper>
